package com.mycompany.ivr.Vista;

import com.mycompany.ivr.Clases.Llamada;
import com.mycompany.ivr.Controlador.ControladorConsultarEncuesta;
import java.util.Date;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class PantallaConsultarEncuesta extends javax.swing.JFrame {
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence-unit");
    EntityManager em = emf.createEntityManager();

    ControladorConsultarEncuesta gestor = ControladorConsultarEncuesta.getInstancia(em, this); // this, se pasa pantalla
                                                                                               // como
    // parámetro, relación de
    // dependencia entre pantalla
    // y gestor.
    // getInstancia es un método estático programado como singleton.
    
    // Variables para paginación de tblLlamadas
    private int pagActualLlamadas = 0;
    private int numFilasLlamadas = 4;
    
    public ControladorConsultarEncuesta getGestor() {
        return gestor;
    }

    public void setGestor(ControladorConsultarEncuesta gestor) {
        this.gestor = gestor;
    }

    public PantallaConsultarEncuesta() {
        initComponents();
    }

    // Instancia única de pantalla, es decir, solo se podrá tener abierta una única
    // ventana.
    private static PantallaConsultarEncuesta instance;

    public static PantallaConsultarEncuesta getInstancia() {
        if (instance == null) {
            instance = new PantallaConsultarEncuesta();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblFechaInicio = new javax.swing.JLabel();
        lblFechaFin = new javax.swing.JLabel();
        jdcFechaInicio = new com.toedter.calendar.JDateChooser();
        jdcFechaFin = new com.toedter.calendar.JDateChooser();
        btnFiltrar = new javax.swing.JButton();
        imgLogo = new javax.swing.JLabel();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jspLlamadas = new javax.swing.JScrollPane();
        tblLlamadas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lblLlamadaSeleccionada = new javax.swing.JLabel();
        lblDescripcionEncuesta = new javax.swing.JLabel();
        txtDescripcionEncuesta = new javax.swing.JTextField();
        lblCliente = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        lblEstadoLlamada = new javax.swing.JLabel();
        txtEstadoLlamada = new javax.swing.JTextField();
        lblDuracionLlamada = new javax.swing.JLabel();
        txtDuracionLlamada = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jspEncuestas = new javax.swing.JScrollPane();
        tblEncuestas = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnGenerarCSV = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jmbArchivo = new javax.swing.JMenuBar();
        jmMenu = new javax.swing.JMenu();
        jmiCancelar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblFechaInicio.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        lblFechaInicio.setText("Ingresar fecha de inicio:");
        lblFechaInicio.setEnabled(false);

        lblFechaFin.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        lblFechaFin.setText("Ingresar fecha de fin:");
        lblFechaFin.setEnabled(false);

        jdcFechaInicio.setEnabled(false);

        jdcFechaFin.setEnabled(false);

        btnFiltrar.setBackground(new java.awt.Color(238, 69, 40));
        btnFiltrar.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        btnFiltrar.setForeground(new java.awt.Color(255, 255, 255));
        btnFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ivr/Imagenes/filterAmarillo.png"))); // NOI18N
        btnFiltrar.setText("Filtrar");
        btnFiltrar.setActionCommand("Volver");
        btnFiltrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        imgLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ivr/Imagenes/logoPrincipal.png"))); // NOI18N
        imgLogo.setText("jLabel1");

        btnPrev.setBackground(new java.awt.Color(238, 69, 40));
        btnPrev.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        btnPrev.setForeground(new java.awt.Color(255, 255, 255));
        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ivr/Imagenes/prev.png"))); // NOI18N
        btnPrev.setActionCommand("Volver");
        btnPrev.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPrev.setEnabled(false);
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(238, 69, 40));
        btnNext.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 255, 255));
        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ivr/Imagenes/next.png"))); // NOI18N
        btnNext.setActionCommand("Volver");
        btnNext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNext.setEnabled(false);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcFechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdcFechaInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(65, 65, 65))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFechaInicio)
                            .addComponent(lblFechaFin)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblFechaInicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdcFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFechaFin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdcFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNext)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(imgLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jspLlamadas.setForeground(new java.awt.Color(249, 161, 38));
        jspLlamadas.setEnabled(false);

        tblLlamadas.setFont(new java.awt.Font("Nirmala UI", 0, 36)); // NOI18N
        tblLlamadas.setForeground(new java.awt.Color(238, 69, 40));
        tblLlamadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Llamada"
            }
        ));
        tblLlamadas.setEnabled(false);
        tblLlamadas.setOpaque(false);
        tblLlamadas.getTableHeader().setReorderingAllowed(false);
        tblLlamadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLlamadasMouseClicked(evt);
            }
        });
        jspLlamadas.setViewportView(tblLlamadas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspLlamadas, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspLlamadas, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );

        lblLlamadaSeleccionada.setBackground(new java.awt.Color(238, 69, 40));
        lblLlamadaSeleccionada.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        lblLlamadaSeleccionada.setForeground(new java.awt.Color(255, 255, 255));
        lblLlamadaSeleccionada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLlamadaSeleccionada.setText("LLAMADA SELECCIONADA");
        lblLlamadaSeleccionada.setOpaque(true);

        lblDescripcionEncuesta.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        lblDescripcionEncuesta.setText("Descripción de Encuesta:");
        lblDescripcionEncuesta.setEnabled(false);

        txtDescripcionEncuesta.setEditable(false);
        txtDescripcionEncuesta.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        txtDescripcionEncuesta.setEnabled(false);

        lblCliente.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        lblCliente.setText("Cliente:");
        lblCliente.setEnabled(false);

        txtCliente.setEditable(false);
        txtCliente.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        txtCliente.setEnabled(false);

        lblEstadoLlamada.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        lblEstadoLlamada.setText("Estado Actual:");
        lblEstadoLlamada.setEnabled(false);

        txtEstadoLlamada.setEditable(false);
        txtEstadoLlamada.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        txtEstadoLlamada.setEnabled(false);

        lblDuracionLlamada.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        lblDuracionLlamada.setText("Duración:");
        lblDuracionLlamada.setEnabled(false);

        txtDuracionLlamada.setEditable(false);
        txtDuracionLlamada.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        txtDuracionLlamada.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLlamadaSeleccionada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescripcionEncuesta)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCliente)
                            .addComponent(lblEstadoLlamada)
                            .addComponent(lblDuracionLlamada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCliente)
                            .addComponent(txtEstadoLlamada)
                            .addComponent(txtDuracionLlamada)
                            .addComponent(txtDescripcionEncuesta))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lblLlamadaSeleccionada, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescripcionEncuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcionEncuesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEstadoLlamada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstadoLlamada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDuracionLlamada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDuracionLlamada))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jspEncuestas.setForeground(new java.awt.Color(249, 161, 38));
        jspEncuestas.setEnabled(false);

        tblEncuestas.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        tblEncuestas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pregunta", "DescripciónPregunta", "RespuestaSeleccionada"
            }
        ));
        tblEncuestas.setEnabled(false);
        jspEncuestas.setViewportView(tblEncuestas);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspEncuestas, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspEncuestas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnGenerarCSV.setBackground(new java.awt.Color(238, 69, 40));
        btnGenerarCSV.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        btnGenerarCSV.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerarCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ivr/Imagenes/csvVerdeFinal.png"))); // NOI18N
        btnGenerarCSV.setText("Generar CSV");
        btnGenerarCSV.setActionCommand("Volver");
        btnGenerarCSV.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGenerarCSV.setEnabled(false);
        btnGenerarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarCSVActionPerformed(evt);
            }
        });

        btnImprimir.setBackground(new java.awt.Color(238, 69, 40));
        btnImprimir.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        btnImprimir.setForeground(new java.awt.Color(255, 255, 255));
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ivr/Imagenes/printer.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setActionCommand("Volver");
        btnImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnImprimir.setEnabled(false);
        btnImprimir.setMaximumSize(new java.awt.Dimension(105, 30));
        btnImprimir.setMinimumSize(new java.awt.Dimension(105, 30));
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(238, 69, 40));
        btnCancelar.setFont(new java.awt.Font("Nirmala UI", 1, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ivr/Imagenes/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setActionCommand("Volver");
        btnCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancelar.setMaximumSize(new java.awt.Dimension(105, 30));
        btnCancelar.setMinimumSize(new java.awt.Dimension(105, 30));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGenerarCSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(125, 125, 125)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(btnGenerarCSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jmMenu.setText("Archivo");
        jmMenu.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N

        jmiCancelar.setFont(new java.awt.Font("Nirmala UI", 0, 12)); // NOI18N
        jmiCancelar.setText("Cancelar");
        jmiCancelar.setToolTipText("");
        jmiCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCancelarActionPerformed(evt);
            }
        });
        jmMenu.add(jmiCancelar);

        jmbArchivo.add(jmMenu);

        setJMenuBar(jmbArchivo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCancelarActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estas seguro que deseas cancelar?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            this.dispose(); // Cierra la ventana y la destruye
        }
    }//GEN-LAST:event_jmiCancelarActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        long FI = tomarFechaInicio().getTime();
        long FF = tomarFechaFin().getTime();
        Date fechaInicio = new Date(FI);
        Date fechaFin = new Date(FF);
        Date fechaActual = new Date();

        if (fechaInicio.after(fechaFin)) { // Validación de Fechas
            JOptionPane.showMessageDialog(null, "La Fecha de Inicio ingresada es posterior a la Fecha de Fin", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (fechaFin.after(fechaActual)) {
            JOptionPane.showMessageDialog(null, "La Fecha de Fin ingresada es posterior a la Fecha actual", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            this.getGestor().tomarPeriodo(fechaInicio, fechaFin); // Invoca método de gestor tomar periodo
        }
        // ingresando como parámetros las fechas
        // seleccionadas por el coordinador.
        /**
         * El método tomarPeriodo() llama a buscarLlamadasConEncuesta()
         * El método buscarLlamadasConEncuesta() tiene que:
         * - agregar los métodos esDePeriodo() que llama a
         * getFechaHoraInicio() de CambioEstado.
         * Luego llamaba al método de Llamada tieneEncuestaAsociada.
         * - finalmente llama al método mostrarLlamadasConEncuestaParaSeleccion() de la
         * pantalla.
         */
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void tblLlamadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLlamadasMouseClicked
        Llamada llamadaSeleccionada = tomarSeleccionLlamadaConEncuesta();
        this.getGestor().tomarSeleccionLlamadaConEncuesta(llamadaSeleccionada); // Invoca al método del gestor
                                                                                // tomarSeleccionLlamadaConEncuesta
                                                                                // para obtener los datos
                                                                                // asociados.
        /**
         * El método tomarSeleccionLlamadaConEncuesta() del gestor establece la
         * siguiente secuencia.
         * obtenerDatosLlamada()
         * obtenerDatosEncuesta()
         * Luego buscarEncuestaAsociada()
         * armarEncuesta()
         * armarEncuesta()
         * mostrarEncuesta() método de la pantalla llamado por el gestor.
         */
    }//GEN-LAST:event_tblLlamadasMouseClicked

    private void btnGenerarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarCSVActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estas seguro que deseas generar un archivo .csv?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            tomarOpcionSalida("CSV");
        }
    }//GEN-LAST:event_btnGenerarCSVActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estas seguro que deseas imprimir?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            tomarOpcionSalida("Imprimir");
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estas seguro que deseas cancelar?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            this.dispose(); // Cierra la ventana y la destruye
            this.jdcFechaInicio.setDate(null);
            this.jdcFechaFin.setDate(null);
            DefaultTableModel modelTableLlamadas = (DefaultTableModel) tblLlamadas.getModel();
            modelTableLlamadas.setRowCount(0);
            DefaultTableModel modelTableEncuestas = (DefaultTableModel) tblEncuestas.getModel();
            modelTableEncuestas.setRowCount(0);
            txtDescripcionEncuesta.setText("");
            txtCliente.setText("");
            txtEstadoLlamada.setText("");
            txtDuracionLlamada.setText("");
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        if (pagActualLlamadas > 0) {
            pagActualLlamadas--;
            mostrarLlamadasConEncuestaParaSeleccion();
        }
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        List<Llamada> llamadas = this.getGestor().getListaLlamadas();
        if (pagActualLlamadas * numFilasLlamadas + numFilasLlamadas < llamadas.size()) {
            pagActualLlamadas++;
            mostrarLlamadasConEncuestaParaSeleccion();
        }
    }//GEN-LAST:event_btnNextActionPerformed
    public void opcionConsultarEncuesta() {
        habilitarVentana();
    }

    public void habilitarVentana() { // Método para abrir la ventana del CU.
        setVisible(true);
        this.getGestor().consultarEncuesta(); // Solicitar autorización al gestor para habilitar el filtro por periódo.
    }

    public void habilitarFiltroPorPeriodo() { // Habilitar los componentes de la pantalla que hacen al
                                              // funci0onamiento del filtro por periódo.
        lblFechaInicio.setEnabled(true);
        lblFechaFin.setEnabled(true);
        jdcFechaInicio.setEnabled(true);
        jdcFechaFin.setEnabled(true);
        btnFiltrar.setEnabled(true);
    }

    public Date tomarFechaInicio() { // Obtiene la fecha inicio que ingresó el usuario
        return jdcFechaInicio.getDate();
    }

    public Date tomarFechaFin() { // Obtiene la fecha fin que ingresó el usuario
        return jdcFechaFin.getDate();
    }

    public void mostrarLlamadasConEncuestaParaSeleccion() {
        jspLlamadas.setEnabled(true);
        tblLlamadas.setEnabled(true);
        
        List<Llamada> llamadas = this.getGestor().getListaLlamadas();
        int pagInicio = pagActualLlamadas * numFilasLlamadas;
        int pagFin = Math.min(pagInicio + numFilasLlamadas, llamadas.size());
        
        if (pagInicio > 0) {
            btnPrev.setEnabled(true);
        } else {
            btnPrev.setEnabled(false);
        }
        if ((pagInicio + numFilasLlamadas) < llamadas.size()) {
            btnNext.setEnabled(true);
        } else {
            btnNext.setEnabled(false);
        }
        
        DefaultTableModel model = (DefaultTableModel) tblLlamadas.getModel();
        model.setRowCount(0); // Permite refrescar la data cada vez que se actualice.
        
        if (llamadas.isEmpty()) { // Si no se encontraron llamadas en el periódo definido.
            JOptionPane.showMessageDialog(null, "No se encontraron llamadas en el periodo establecido", "Error",
                    JOptionPane.ERROR_MESSAGE);
            DefaultTableModel modelEncuesta = (DefaultTableModel) tblEncuestas.getModel();
            modelEncuesta.setRowCount(0);
            txtDescripcionEncuesta.setText("");
            txtCliente.setText("");
            txtEstadoLlamada.setText("");
            txtDuracionLlamada.setText("");
        }
        Object rowData[] = new Object[1];
        for (int i = pagInicio; i < pagFin; i++) { // Cargar las llamadas en la tabla de llamadas.
            rowData[0] = "Llamada " + (i + 1);
            model.addRow(rowData);
        }
    }

    public Llamada tomarSeleccionLlamadaConEncuesta() { // Tomar la llamada seleccionada en la tabla de llamadas.
        int llamadaSeleccionada = tblLlamadas.getSelectedRow();
        return this.getGestor().getListaLlamadas().get(llamadaSeleccionada);
    }

    public void mostrarEncuesta() {
        // Habilitar los componentes necesarios para mostrar las encuestas
        lblDescripcionEncuesta.setEnabled(true);
        txtDescripcionEncuesta.setEnabled(true);
        lblCliente.setEnabled(true);
        txtCliente.setEnabled(true);
        lblEstadoLlamada.setEnabled(true);
        txtEstadoLlamada.setEnabled(true);
        lblDuracionLlamada.setEnabled(true);
        txtDuracionLlamada.setEnabled(true);

        String descEncuesta = this.getGestor().getDescripcionEncuesta(); // Obtiene la descripción de encuesta.
        String nombreCliente = this.getGestor().getNombreCliente(); // Obtiene el nombre del cliente.
        String estadoLlamada = this.getGestor().getUltimoEstadoLlamada(); // Obtiene el estado actual de llamada.
        String duracionLlamada = this.getGestor().getDuracionLlamada(); // Obtiene la duración de llamada.
        txtDescripcionEncuesta.setText(descEncuesta); // Mostrar descripción de encuesta.
        txtCliente.setText(nombreCliente); // Mostrar nombre de cliente.
        txtEstadoLlamada.setText(estadoLlamada); // Mostrar estado actual de llamada.
        txtDuracionLlamada.setText(duracionLlamada); // Mostrar duración de llamada.

        jspEncuestas.setEnabled(true);
        tblEncuestas.setEnabled(false);

        DefaultTableModel model = (DefaultTableModel) tblEncuestas.getModel();
        model.setRowCount(0);
        List<String> respuestas = this.getGestor().getRespuestas();
        List<String> descPreguntas = this.getGestor().getPreguntas();
        Object rowData[] = new Object[3];
        for (int i = 0; i < respuestas.size(); i++) { // Cargar data en tabla de preguntas y respuestas.
            // Bloque de formateo de respuestas//
            String respuestaCompleta = respuestas.get(i);
            String[] respuestaPartidaSinEspacioEnMemoria = respuestaCompleta.split("_");
            String respuesta = respuestaPartidaSinEspacioEnMemoria[0]; // Respuesta si espacio de memoria.
            String[] respuestaPartida = respuesta.split("-");
            String respuestaCiente = respuestaPartida[0]; // Respuesta de cliente.
            String respuestaSeleccionada = respuestaPartida[1]; // Respuesta seleccionada.
            // Fin bloque de formateo de respuestas//
            rowData[0] = descPreguntas.get(i);
            rowData[1] = respuestaCiente;
            rowData[2] = respuestaSeleccionada;
            model.addRow(rowData);
        }
    }

    public void mostrarOpcionesSalida() { // Habilitar botones de generación de salida de reporte.
        btnGenerarCSV.setEnabled(true);
        btnImprimir.setEnabled(true);
    }

    public void tomarOpcionSalida(String salida) { // Tomar opción de salida para que el gestor genere el reporte
                                                   // correspondiente.
        this.getGestor().tomarOpcionSalida(salida);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
                    .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaConsultarEncuesta.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaConsultarEncuesta.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaConsultarEncuesta.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaConsultarEncuesta.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaConsultarEncuesta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnGenerarCSV;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private com.toedter.calendar.JDateChooser jdcFechaFin;
    private com.toedter.calendar.JDateChooser jdcFechaInicio;
    private javax.swing.JMenu jmMenu;
    private javax.swing.JMenuBar jmbArchivo;
    private javax.swing.JMenuItem jmiCancelar;
    private javax.swing.JScrollPane jspEncuestas;
    private javax.swing.JScrollPane jspLlamadas;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblDescripcionEncuesta;
    private javax.swing.JLabel lblDuracionLlamada;
    private javax.swing.JLabel lblEstadoLlamada;
    private javax.swing.JLabel lblFechaFin;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JLabel lblLlamadaSeleccionada;
    private javax.swing.JTable tblEncuestas;
    private javax.swing.JTable tblLlamadas;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDescripcionEncuesta;
    private javax.swing.JTextField txtDuracionLlamada;
    private javax.swing.JTextField txtEstadoLlamada;
    // End of variables declaration//GEN-END:variables
}
